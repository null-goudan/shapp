# Generated by Django 3.2.5 on 2021-08-17 06:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=15, verbose_name='姓名')),
                ('sex', models.CharField(default='男', max_length=10, verbose_name='性别')),
                ('age', models.IntegerField(default=0, verbose_name='年龄')),
                ('student_num', models.CharField(default='', max_length=32, verbose_name='学号')),
                ('student_class', models.CharField(default='', max_length=32, verbose_name='学生班级')),
                ('score', models.IntegerField(default=0, verbose_name='积分')),
                ('money', models.IntegerField(default=0, verbose_name='余额')),
            ],
        ),
        migrations.CreateModel(
            name='WorkTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=32, verbose_name='单子标题')),
                ('context', models.TextField(default='', max_length=500, verbose_name='单子需求')),
                ('back', models.IntegerField(default=0, verbose_name='回报')),
                ('BackType', models.BooleanField(default=False, verbose_name='回报类型')),
                ('TableType', models.CharField(default='未知', max_length=32, verbose_name='单子类型')),
                ('isAccept', models.BooleanField(default=False, verbose_name='是否已经接单')),
                ('isFinished', models.BooleanField(default=False, verbose_name='是否结束')),
            ],
        ),
        migrations.CreateModel(
            name='TableDeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isActive', models.BooleanField(default=False)),
                ('Table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.worktable')),
                ('User_receive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_receive', to=settings.AUTH_USER_MODEL)),
                ('User_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_request', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='userinfo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.userinfo'),
        ),
    ]
